此题的基本思想是利用线段树实现动态的更新和查询。线段树的每个节点存储了一段线段中有多少牌朝上。
在每次翻转了一个区间以后，对于线段树的一个节点覆盖的线段，有四种可能性：
线段就是区间包含；线段的左半部分完全包含这个区间；线段的右半部分完全包含这个区间；线段的左右部分各有一部分被包含。
这四种情况，对应不同的处理方法。用递归的方法不断深入，直到区间正好等于线段，就可以返回。
同时，用一个标记记录当前节点是否有更新过，为了减少时间消耗，假如一整个线段都需要翻转，就做个标记，不把变化传递给后代。
之后每当查询和反转的时候，一旦需要深入，而这个节点又做过了标记，那么就把这个变化标记传递给孩子们。
时间复杂度：
树的总深度为logn，每次操作，对应一个线段，线段有两个端点，这两个端点到根的路径长度加起来不会超过2logn。
因此，每一次操作都是对应的logn的时间，因此m次操作为O(mlogn)。
空间复杂度：存储线段树，O(n)。